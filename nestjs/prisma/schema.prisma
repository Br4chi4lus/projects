generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id Int @default(autoincrement()) @id
  email String @unique
  firstName String
  lastName String
  dateOfBirth DateTime
  dateOfRegistration DateTime @default(now())
  passwordHash String
  managedProjects Project[] @relation(name: "createdBy")
  projects Project[] @relation(name: "developedBy")
  roleId Int @default(3)
  role Role @relation(fields: [roleId], references: [id])
  tasks Task[]
  @@map("user")
}

model Role {
  id Int @default(autoincrement()) @id
  role String
  users User[]
  @@map("role")
}

model Project {
  id Int @default(autoincrement()) @id
  name String
  description String
  managerId Int
  manager User @relation(fields: [managerId], references: [id], name: "createdBy")
  users User[] @relation(name: "developedBy")
  dateOfCreation DateTime @default(now())
  dateOfModified DateTime @default(now()) @updatedAt
  stateId Int @default(1)
  state StateOfProject @relation(fields: [stateId], references: [id])
  tasks Task[]
  @@map("project")
}

model StateOfProject {
  id Int @default(autoincrement()) @id
  state String
  projects Project[]
  tasks Task[]
  @@map("stateofproject")
}

model Task{
  id Int @default(autoincrement()) @id
  name String
  description String
  userId Int
  user User @relation(fields: [userId], references: [id])
  projectId Int
  project Project @relation(fields: [projectId], references: [id])
  stateId Int @default(1)
  state StateOfProject @relation(fields: [stateId], references: [id])
  @@map("task")
}